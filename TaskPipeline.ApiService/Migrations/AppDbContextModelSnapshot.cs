// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskPipeline.ApiService.DAL;

#nullable disable

namespace TaskPipeline.ApiService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("TaskPipeline.ApiService.Pipelines.Pipeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("LastRunTime")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pipelines");
                });

            modelBuilder.Entity("TaskPipeline.ApiService.Pipelines.PipelineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("LastRunTime")
                        .HasColumnType("REAL");

                    b.Property<int?>("NextItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PipelineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NextItemId");

                    b.HasIndex("PipelineId");

                    b.HasIndex("TaskId");

                    b.ToTable("PipelineItem");
                });

            modelBuilder.Entity("TaskPipeline.ApiService.Tasks.ExecutableTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageTime")
                        .HasColumnType("REAL");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShouldCompleteUnsuccessfully")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskPipeline.ApiService.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiToken = "token_123",
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            ApiToken = "token_456",
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            ApiToken = "token_789",
                            Name = "Charlie"
                        });
                });

            modelBuilder.Entity("TaskPipeline.ApiService.Pipelines.PipelineItem", b =>
                {
                    b.HasOne("TaskPipeline.ApiService.Pipelines.PipelineItem", "NextItem")
                        .WithMany()
                        .HasForeignKey("NextItemId");

                    b.HasOne("TaskPipeline.ApiService.Pipelines.Pipeline", "Pipeline")
                        .WithMany("Items")
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskPipeline.ApiService.Tasks.ExecutableTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NextItem");

                    b.Navigation("Pipeline");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskPipeline.ApiService.Pipelines.Pipeline", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
